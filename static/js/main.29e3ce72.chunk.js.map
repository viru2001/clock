{"version":3,"sources":["components/Stopwatch.js","components/Navbar.js","components/Clock.js","songs/reminder.mp3","components/Countdown.js","App.js","index.js"],"names":["Counter","useState","time","settime","timerOn","settimerOn","isStarted","setisStarted","isPaused","setisPaused","lapTime","setlapTime","lapTimerOn","setlapTimerOn","lapLogs","setlapLogs","useEffect","overallInterval","setInterval","prevTime","clearInterval","lapInterval","prevLapTime","id","amount","className","Math","floor","slice","Button","variant","size","onClick","currentLap","sno","length","lhh","lmm","lss","lms","hh","mm","ss","ms","Table","responsive","map","log","Number","style","color","lapLog","tempLaplogs","filter","deleteLog","Navbar","Nav","activeKey","Item","Link","as","to","eventKey","Clock","Date","toLocaleTimeString","currTime","setcurrTime","toDateString","currDate","setcurrDate","Countdown","options","i","push","value","label","showTimer","setshowTimer","needToplaySound","setneedToplaySound","countdownOn","setcountdownOn","isEnded","setisEnded","playSong","setplaySong","hrs","sethrs","minutes","setminutes","seconds","setseconds","flag","countdownInterval","prevSeconds","prevMinutes","prevHrs","Form","Control","onChange","e","target","disabled","option","index","Check","checked","type","url","reminderSong","playStatus","Sound","status","PLAYING","STOPPED","playFromPosition","App","exact","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29e3ce72.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport './Stopwatch.css'\r\nimport { Table } from 'react-bootstrap'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Spacer from 'react-add-space';\r\n\r\n\r\nexport const Counter = () => {\r\n\r\n\r\n    const [time, settime] = useState(0)\r\n    const [timerOn, settimerOn] = useState(false)\r\n    const [isStarted, setisStarted] = useState(false)\r\n    const [isPaused, setisPaused] = useState(false)\r\n    const [lapTime, setlapTime] = useState(0)\r\n    const [lapTimerOn, setlapTimerOn] = useState(false)\r\n    const [lapLogs, setlapLogs] = useState([])\r\n   \r\n\r\n\r\n    const start = () => {\r\n        settimerOn(true)\r\n        setisStarted(true)\r\n        setlapTimerOn(true)\r\n    }\r\n\r\n    const pause = () => {\r\n        settimerOn(false)\r\n        setisStarted(false)\r\n        setisPaused(true)\r\n        setlapTimerOn(false)\r\n    }\r\n\r\n    const resume = () => {\r\n        settimerOn(true)\r\n        setisStarted(true)\r\n        setisPaused(false)\r\n        setlapTimerOn(true)\r\n    }\r\n\r\n    const reset = () => {\r\n        settime(0)\r\n        settimerOn(false)\r\n        setisStarted(false)\r\n        setisPaused(false)\r\n\r\n        setlapTime(0)\r\n        setlapTimerOn(false)\r\n        setlapLogs([])\r\n    }\r\n\r\n    const lap = () => {\r\n\r\n        let sno;\r\n        if (lapLogs.length === 0) {\r\n            sno = 0\r\n        }\r\n        else {\r\n            sno = lapLogs[lapLogs.length - 1].sno + 1;\r\n        }\r\n\r\n        const currentLap = {\r\n            sno: sno,\r\n            lhh: (\"0\" + Math.floor((lapTime / 60000) / 60)).slice(-2),\r\n            lmm: (\"0\" + Math.floor((lapTime / 60000) % 60)).slice(-2),\r\n            lss: (\"0\" + Math.floor((lapTime / 1000) % 60)).slice(-2),\r\n\r\n            lms: (\"00\" + (lapTime % 1000)).slice(-3),\r\n            hh: (\"0\" + Math.floor((time / 60000) / 60)).slice(-2),\r\n            mm: (\"0\" + Math.floor((time / 60000) % 60)).slice(-2),\r\n            ss: (\"0\" + Math.floor((time / 1000) % 60)).slice(-2),\r\n        \r\n            ms: (\"00\" + (time % 1000)).slice(-3)\r\n\r\n        }\r\n        setlapLogs([...lapLogs, currentLap])   \r\n        setlapTime(0)\r\n\r\n    }\r\n\r\n    const deleteLog = (lapLog) =>{\r\n            let tempLaplogs = lapLogs.filter( (log) =>{\r\n                    return log !== lapLog\r\n            } ) \r\n            setlapLogs(tempLaplogs)      \r\n    }\r\n\r\n    useEffect(() => {\r\n        let overallInterval = null\r\n\r\n        if (timerOn) {\r\n            overallInterval = setInterval(() => {\r\n                settime(prevTime => prevTime + 10)\r\n            }, 10)\r\n        }\r\n        else {\r\n            clearInterval(overallInterval)\r\n        }\r\n        return () => {\r\n            clearInterval(overallInterval)\r\n\r\n        }\r\n    }, [timerOn])\r\n\r\n    useEffect(() => {\r\n        let lapInterval = null\r\n        if (lapTimerOn) {\r\n            lapInterval = setInterval(() => {\r\n                setlapTime(prevLapTime => prevLapTime + 10)\r\n            }, 10)\r\n        }\r\n        else {\r\n            clearInterval(lapInterval)\r\n        }\r\n        return () => {\r\n            clearInterval(lapInterval)\r\n        }\r\n    }, [lapTimerOn])\r\n\r\n    return (\r\n        <div id=\"mainBody\">\r\n            <Spacer amount={2} />\r\n            <div id=\"counter\">\r\n\r\n                <div className=\"innerContainer\">\r\n                    <h1 className=\"hh\">{(\"0\" + Math.floor((time / 60000) / 60)).slice(-2)}</h1>\r\n                </div>\r\n\r\n                <div>\r\n                    <h1 className=\"hh\"> :</h1>\r\n                </div>\r\n\r\n                <div className=\"innerContainer\">\r\n                    <h1 className=\"mm\">{(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}</h1>\r\n\r\n                </div>\r\n                <div>\r\n                    <h1 className=\"hh\"> :</h1>\r\n                </div>\r\n                <div className=\"innerContainer\">\r\n                    <h1 className=\"ss\"> {(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}</h1>\r\n\r\n                </div>\r\n                <div>\r\n                    <h1 className=\"hh\"> :</h1>\r\n                </div>\r\n    \r\n                <div className=\"innerContainer\">\r\n                    <h1 className=\"ms\"> {(\"00\" + (time % 1000)).slice(-3)}</h1>\r\n                </div>\r\n\r\n                <h1 className=\"whichTimer\">hours</h1>\r\n                <h1></h1>\r\n                <h1 className=\"whichTimer\">minutes</h1>\r\n                <h1></h1>\r\n                <h1 className=\"whichTimer\">sec</h1>\r\n                <h1></h1>\r\n                <h1 className=\"whichTimer\">mili sec</h1>\r\n                \r\n            </div>\r\n\r\n\r\n\r\n            <div id=\"lapCounter\">\r\n                <div className=\"innerContainer\">\r\n                    <h1 className=\"lap-hh\">{(\"0\" + Math.floor((lapTime / 60000) / 60)).slice(-2)}</h1>\r\n                </div>\r\n\r\n                <div>\r\n                    <h1 className=\"lap-hh\"> :</h1>\r\n                </div>\r\n\r\n                <div className=\"innerContainer\">\r\n                    <h1 className=\"lap-mm\">{(\"0\" + Math.floor((lapTime / 60000) % 60)).slice(-2)}</h1>\r\n\r\n                </div>\r\n                <div>\r\n                    <h1 className=\"lap-hh\"> :</h1>\r\n                </div>\r\n                <div className=\"innerContainer\">\r\n                    <h1 className=\"lap-ss\"> {(\"0\" + Math.floor((lapTime / 1000) % 60)).slice(-2)}</h1>\r\n\r\n                </div>\r\n                <div>\r\n                    <h1 className=\"lap-hh\"> :</h1>\r\n                </div>\r\n            \r\n                <div className=\"innerContainer\">\r\n                    <h1 className=\"lap-ms\"> {(\"00\" + (lapTime % 1000)).slice(-3)}</h1>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <div id=\"controlButtons\">\r\n                {!isPaused && !isStarted && <Button variant=\"success\" size=\"lg\" onClick={start}>START</Button>}\r\n                {!isPaused && isStarted && <Button variant=\"danger\" size=\"lg\" onClick={pause}>PAUSE</Button>}\r\n                {isPaused && <Button variant=\"success\" size=\"lg\" onClick={resume}>RESUME</Button>}\r\n                {isPaused && <Button variant=\"warning\" size=\"lg\" onClick={reset}>RESET</Button>}\r\n                {!isPaused && isStarted && <Button variant=\"primary\" size=\"lg\" onClick={lap}>LAP</Button>}\r\n            </div>\r\n            <div id=\"tableContainer\">\r\n                {lapLogs.length > 0 ? <Table responsive id=\"lapTable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Lap</th>\r\n                            <th>Lap Timing</th>\r\n                            <th>Overall Timing</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>       \r\n\r\n                        {lapLogs.map((log) => {\r\n                            if(log){\r\n                            return (               \r\n                                <tr key={log.sno}>\r\n                                    <td>{\"#\"+Number(log.sno+1)}</td>\r\n                                    <td>{log.lhh + \":\" + log.lmm + \":\" + log.lss + \":\" + log.lms }</td>\r\n                                    <td>{log.hh + \":\" + log.mm + \":\" + log.ss + \":\" + log.ms }</td>\r\n                                    <td><DeleteIcon style={{color: \"red\"}}  onClick={()=> deleteLog(log)} /></td>\r\n                                </tr>                              \r\n                            )}\r\n                            else{\r\n                                return null\r\n                            }\r\n                            \r\n                        })\r\n                        }\r\n                    </tbody>\r\n                </Table> : null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Counter;\r\n","import Nav from 'react-bootstrap/Nav';\r\nimport \"./Navbar.css\"\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar() {\r\n\r\n\r\n    return (\r\n        <Nav id=\"navbar\" className=\"justify-content-center\"  activeKey=\"/Digital Clock\" >\r\n            <Nav.Item>\r\n                <Nav.Link as={Link} to=\"/clock\" >Clock</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                <Nav.Link as={Link} to=\"/stopwatch\" eventKey=\"link-1\" >Stopwatch</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                <Nav.Link as={Link} to=\"/countdown\" eventKey=\"link-2\" >Countdown</Nav.Link>\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport './clock.css'\r\n\r\nfunction Clock() {\r\n\r\n    const [currTime, setcurrTime] = useState(new Date().toLocaleTimeString())\r\n    const [currDate, setcurrDate] = useState(new Date().toDateString())\r\n\r\n    setInterval(() => {\r\n        setcurrTime(new Date().toLocaleTimeString())\r\n        setcurrDate(new Date().toDateString())\r\n    }, 1000)\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-center align-items-center\" id=\"main-div\" >\r\n            <div className=\"d-flex flex-column\" id=\"inner-div\" >\r\n                <h1 id=\"date\" >{currDate}</h1>\r\n                <h1 id=\"time\">{currTime}</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clock\r\n","export default __webpack_public_path__ + \"static/media/reminder.32531d2d.mp3\";","import React, { useState, useEffect } from 'react'\r\n\r\nimport \"./Countdown.css\"\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport Spacer from 'react-add-space';\r\nimport Sound from 'react-sound'\r\nimport reminderSong from \"../songs/reminder.mp3\"\r\n\r\n\r\n\r\nexport default function Countdown() {\r\n\r\n  let options = []\r\n  for (let i = 0; i <= 60; i++) {\r\n    options.push({\r\n      value: i,\r\n      label: (\"0\" + i).slice(-2)\r\n    })\r\n  }\r\n\r\n  // options=[{value: 'select'}, {value: 'other'}]\r\n  // let options = []\r\n  // for(let i =0)\r\n\r\n  const [isStarted, setisStarted] = useState(false)\r\n  const [isPaused, setisPaused] = useState(false)\r\n  const [showTimer, setshowTimer] = useState(false)\r\n  const [needToplaySound, setneedToplaySound] = useState(false)\r\n  const [countdownOn, setcountdownOn] = useState(false)\r\n  const [isEnded, setisEnded] = useState(false)\r\n\r\n  const [playSong, setplaySong] = useState(false)\r\n\r\n  const [hrs, sethrs] = useState(0)\r\n  const [minutes, setminutes] = useState(0)\r\n  const [seconds, setseconds] = useState(0)\r\n\r\n  const start = () => {\r\n    setisStarted(true)\r\n    setshowTimer(true)\r\n    setcountdownOn(true)\r\n  }\r\n  const pause = () => {\r\n    setisPaused(true)\r\n    setcountdownOn(false)\r\n  }\r\n  const resume = () => {\r\n    setisPaused(false)\r\n    setcountdownOn(true)\r\n  }\r\n  const cancel = () => {\r\n    setisStarted(false)\r\n    setshowTimer(false)\r\n    sethrs(0)\r\n    setminutes(0)\r\n    setseconds(0)\r\n\r\n    setcountdownOn(false)\r\n    setplaySong(false)\r\n    setisEnded(false)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    let countdownInterval = null\r\n    let flag\r\n    if (countdownOn) {\r\n      \r\n      countdownInterval = setInterval(() => {\r\n        setseconds((prevSeconds) => {\r\n          if (prevSeconds !== 0) {\r\n            return prevSeconds - 1\r\n          }\r\n          else if (prevSeconds === 0 && minutes >= 0 ) {\r\n            setminutes((prevMinutes) => {\r\n              if (prevMinutes !== 0) {\r\n                return prevMinutes - 1\r\n              }\r\n              else if(prevMinutes === 0 && hrs === 0){\r\n                flag = 1\r\n                return 0\r\n              }\r\n              else if(prevMinutes === 0 && hrs > 0){\r\n                sethrs( (prevHrs) =>{\r\n                  if(prevHrs !== 0 ){\r\n                    setminutes(59)\r\n                    return prevHrs - 1\r\n                  }\r\n                  else if(prevHrs === 0){\r\n                    // flag = 1\r\n                    setminutes(0)\r\n                    return 0\r\n                  }\r\n                } )\r\n              }\r\n            })\r\n            if(flag === 1){\r\n              if(needToplaySound){\r\n                setplaySong(true)\r\n              }\r\n              setisEnded(true)\r\n              // console.log(\"Countdown Ended\")\r\n              return 0\r\n            }\r\n            return 59\r\n          }\r\n          // else if(prevSeconds === 0 && minutes === 0){\r\n          //   console.log(\"Countdown Ended\")\r\n          //   return 0\r\n          // }\r\n          else{\r\n            if(needToplaySound){\r\n              setplaySong(true)\r\n              \r\n            }\r\n            setisEnded(true)\r\n            // console.log(\"Countdown Ended\")\r\n            \r\n            return 0\r\n          }\r\n        })\r\n      }, 1000)\r\n    }\r\n    else {\r\n      clearInterval(countdownInterval)\r\n    }\r\n    return () => {\r\n      clearInterval(countdownInterval)\r\n    }\r\n  }, [countdownOn,hrs,minutes,needToplaySound])\r\n\r\n\r\n  // const handleSongLoading = ()=>{\r\n\r\n  // }\r\n  // const handleSongPlaying = ()=>{\r\n    \r\n  // }\r\n  // const handleSongFinishedPlaying = ()=>{\r\n    \r\n  // }\r\n\r\n  return (\r\n\r\n    <div id=\"outerContainer\">\r\n      <Spacer amount={2} />\r\n      {showTimer === false ? <div id=\"select-grid\">\r\n        <h1>Hours</h1>\r\n        <h1>Minutes</h1>\r\n        <h1>Seconds</h1>\r\n        <Form.Control\r\n          className=\"selector\"\r\n          as=\"select\"\r\n          value={hrs}\r\n          onChange={e => {\r\n            // console.log(\"e.target.value\", e.target.value);\r\n            sethrs(Number(e.target.value));\r\n          }}\r\n        >\r\n          <option value=\"\" disabled>Select Hours</option>\r\n\r\n          {\r\n            options.map((option, index) => {\r\n              return (<option key={index} value={option.value}>{option.label}</option>)\r\n            })\r\n          }\r\n\r\n        </Form.Control>\r\n\r\n        <Form.Control\r\n          className=\"selector\"\r\n          as=\"select\"\r\n          value={minutes}\r\n          onChange={e => {\r\n            // console.log(\"e.target.value\", e.target.value);\r\n            setminutes(Number(e.target.value));\r\n          }}\r\n        >\r\n          <option value=\"\" disabled>Select Minutes</option>\r\n          {\r\n            options.map((option, index) => {\r\n              return (<option key={index} value={option.value}>{option.label}</option>)\r\n            })\r\n          }\r\n\r\n        </Form.Control>\r\n\r\n        <Form.Control\r\n          className=\"selector\"\r\n          as=\"select\"\r\n          value={seconds}\r\n          onChange={e => {\r\n            // console.log(\"e.target.value\", e.target.value, typeof (e.target.value));\r\n            setseconds(Number(e.target.value));\r\n          }}\r\n        >\r\n          <option value=\"\" disabled>Select Seconds</option>\r\n          {\r\n            options.map((option, index) => {\r\n              return (<option key={index} value={option.value}>{option.label}</option>)\r\n            })\r\n          }\r\n\r\n        </Form.Control>\r\n\r\n\r\n\r\n\r\n      </div> :\r\n        <div id=\"timer\">\r\n\r\n          <div className=\"innerContainer\">\r\n            <h1 className=\"countdown-hh\">{(\"0\" + hrs).slice(-2)}</h1>\r\n          </div>\r\n\r\n          <div>\r\n            <h1 className=\"countdown-hh\"> :</h1>\r\n          </div>\r\n\r\n          <div className=\"innerContainer\">\r\n            <h1 className=\"countdown-mm\">{(\"0\" + minutes).slice(-2)}</h1>\r\n\r\n          </div>\r\n          <div>\r\n            <h1 className=\"countdown-hh\"> :</h1>\r\n          </div>\r\n          <div className=\"innerContainer\">\r\n            <h1 className=\"countdown-ss\"> {(\"0\" + seconds).slice(-2)}</h1>\r\n\r\n          </div>\r\n        </div>}\r\n\r\n      <div id=\"controlButtons\">\r\n        {!isStarted && <Button size=\"lg\" variant=\"success\" onClick={start}>START</Button>}\r\n        {!isEnded && isStarted && !isPaused && <Button size=\"lg\" variant=\"warning\" onClick={pause}>PAUSE</Button>}\r\n        {!isEnded && isStarted && isPaused && <Button size=\"lg\" variant=\"warning\" onClick={resume}>RESUME</Button>}\r\n        {isStarted && <Button size=\"lg\" variant=\"danger\" onClick={cancel}>CANCEL</Button>}\r\n\r\n        {!isStarted && <Form.Check \r\n        onClick={ e => {\r\n          // console.log(e.target.checked)\r\n          setneedToplaySound(e.target.checked)\r\n          // console.log(needToplaySound)\r\n        }}\r\n        className=\"sound-checkbox\" type=\"checkbox\" label=\"Play sound when countdown ends\" />}\r\n\r\n      </div>\r\n\r\n      <Sound\r\n            url = {reminderSong}\r\n            playStatus = { playSong ? Sound.status.PLAYING : Sound.status.STOPPED }\r\n            playFromPosition = { 300 /* in milliseconds */}\r\n            // onLoading = { handleSongLoading }\r\n            // onPlaying = { handleSongPlaying }\r\n            // onFinishedPlaying = { handleSongFinishedPlaying }\r\n              />\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\n\r\n","import Stopwatch from \"./components/Stopwatch\";\nimport Navbar from \"./components/Navbar\";\nimport Clock from \"./components/Clock\";\nimport Countdown from \"./components/Countdown\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n          <Route exact path=\"/clock\" render={()=>{\n            return <Clock />\n          }}>\n          </Route>\n\n          <Route exact path=\"/stopwatch\">\n            <Stopwatch />\n          </Route>\n          <Route exact path=\"/countdown\">\n            <Countdown />\n          </Route>\n\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}